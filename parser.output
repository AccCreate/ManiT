   0  $accept : %entry% $end

   1  program : stmt_list EOF

   2  stmt_list :
   3            | stmt stmt_list

   4  stmt : expr_no_bracket SEMI
   5       | SEMI
   6       | RETURN expr SEMI
   7       | LBRACE stmt_list RBRACE
   8       | IF LPAREN expr RPAREN stmt
   9       | IF LPAREN expr RPAREN stmt ELSE stmt
  10       | FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt
  11       | WHILE LPAREN expr RPAREN stmt
  12       | VAR func_decl

  13  expr_opt :
  14           | expr_no_bracket

  15  expr : array_literal
  16       | expr_no_bracket

  17  expr_no_bracket : LITERAL
  18                  | TRUE
  19                  | FALSE
  20                  | ID
  21                  | expr_no_bracket PLUS expr_no_bracket
  22                  | expr_no_bracket MINUS expr_no_bracket
  23                  | expr_no_bracket TIMES expr_no_bracket
  24                  | expr_no_bracket DIVIDE expr_no_bracket
  25                  | expr_no_bracket EQ expr_no_bracket
  26                  | expr_no_bracket NEQ expr_no_bracket
  27                  | expr_no_bracket LT expr_no_bracket
  28                  | expr_no_bracket LEQ expr_no_bracket
  29                  | expr_no_bracket GT expr_no_bracket
  30                  | expr_no_bracket GEQ expr_no_bracket
  31                  | expr_no_bracket AND expr_no_bracket
  32                  | expr_no_bracket OR expr_no_bracket
  33                  | ID bracket_expr_list
  34                  | MINUS expr_no_bracket
  35                  | NOT expr_no_bracket
  36                  | ID ASSIGN expr
  37                  | ID LPAREN actuals_opt RPAREN
  38                  | LPAREN expr RPAREN

  39  array_literal : LBRACK actuals_opt RBRACK

  40  actuals_opt :
  41              | actuals_list

  42  actuals_list : expr
  43               | actuals_list COMMA expr

  44  bracket_expr_list : LBRACK expr RBRACK
  45                    | LBRACK expr RBRACK bracket_expr_list

  46  func_decl : VAR ID LPAREN param_list RPAREN LBRACE stmt_list RBRACE

  47  param_list :
  48             | ID
  49             | ID COMMA param_list

  50  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (50)
	stmt_list : .  (2)

	VAR  shift 3
	SEMI  shift 4
	LPAREN  shift 5
	LBRACE  shift 6
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	RETURN  shift 11
	IF  shift 12
	FOR  shift 13
	WHILE  shift 14
	LITERAL  shift 15
	ID  shift 16
	EOF  reduce 2

	program  goto 17
	stmt_list  goto 18
	stmt  goto 19
	expr_no_bracket  goto 20


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	stmt : VAR . func_decl  (12)

	VAR  shift 21
	.  error

	func_decl  goto 22


state 4
	stmt : SEMI .  (5)

	.  reduce 5


state 5
	expr_no_bracket : LPAREN . expr RPAREN  (38)

	LBRACK  shift 23
	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 24
	expr  goto 25
	array_literal  goto 26


state 6
	stmt : LBRACE . stmt_list RBRACE  (7)
	stmt_list : .  (2)

	VAR  shift 3
	SEMI  shift 4
	LPAREN  shift 5
	LBRACE  shift 6
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	RETURN  shift 11
	IF  shift 12
	FOR  shift 13
	WHILE  shift 14
	LITERAL  shift 15
	ID  shift 16
	RBRACE  reduce 2

	stmt_list  goto 27
	stmt  goto 19
	expr_no_bracket  goto 20


state 7
	expr_no_bracket : MINUS . expr_no_bracket  (34)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 28


state 8
	expr_no_bracket : NOT . expr_no_bracket  (35)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 29


state 9
	expr_no_bracket : TRUE .  (18)

	.  reduce 18


state 10
	expr_no_bracket : FALSE .  (19)

	.  reduce 19


state 11
	stmt : RETURN . expr SEMI  (6)

	LBRACK  shift 23
	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 24
	expr  goto 30
	array_literal  goto 26


state 12
	stmt : IF . LPAREN expr RPAREN stmt  (8)
	stmt : IF . LPAREN expr RPAREN stmt ELSE stmt  (9)

	LPAREN  shift 31
	.  error


state 13
	stmt : FOR . LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt  (10)

	LPAREN  shift 32
	.  error


state 14
	stmt : WHILE . LPAREN expr RPAREN stmt  (11)

	LPAREN  shift 33
	.  error


state 15
	expr_no_bracket : LITERAL .  (17)

	.  reduce 17


state 16
	expr_no_bracket : ID .  (20)
	expr_no_bracket : ID . bracket_expr_list  (33)
	expr_no_bracket : ID . ASSIGN expr  (36)
	expr_no_bracket : ID . LPAREN actuals_opt RPAREN  (37)

	LBRACK  shift 34
	LPAREN  shift 35
	ASSIGN  shift 36
	RBRACK  reduce 20
	SEMI  reduce 20
	RPAREN  reduce 20
	COMMA  reduce 20
	PLUS  reduce 20
	MINUS  reduce 20
	TIMES  reduce 20
	DIVIDE  reduce 20
	EQ  reduce 20
	NEQ  reduce 20
	LT  reduce 20
	LEQ  reduce 20
	GT  reduce 20
	GEQ  reduce 20
	AND  reduce 20
	OR  reduce 20

	bracket_expr_list  goto 37


state 17
	%entry% : '\001' program .  (50)

	.  reduce 50


state 18
	program : stmt_list . EOF  (1)

	EOF  shift 38
	.  error


state 19
	stmt_list : stmt . stmt_list  (3)
	stmt_list : .  (2)

	VAR  shift 3
	SEMI  shift 4
	LPAREN  shift 5
	LBRACE  shift 6
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	RETURN  shift 11
	IF  shift 12
	FOR  shift 13
	WHILE  shift 14
	LITERAL  shift 15
	ID  shift 16
	RBRACE  reduce 2
	EOF  reduce 2

	stmt_list  goto 39
	stmt  goto 19
	expr_no_bracket  goto 20


state 20
	stmt : expr_no_bracket . SEMI  (4)
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	SEMI  shift 40
	PLUS  shift 41
	MINUS  shift 42
	TIMES  shift 43
	DIVIDE  shift 44
	EQ  shift 45
	NEQ  shift 46
	LT  shift 47
	LEQ  shift 48
	GT  shift 49
	GEQ  shift 50
	AND  shift 51
	OR  shift 52
	.  error


state 21
	func_decl : VAR . ID LPAREN param_list RPAREN LBRACE stmt_list RBRACE  (46)

	ID  shift 53
	.  error


state 22
	stmt : VAR func_decl .  (12)

	.  reduce 12


state 23
	array_literal : LBRACK . actuals_opt RBRACK  (39)
	actuals_opt : .  (40)

	LBRACK  shift 23
	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	RBRACK  reduce 40

	expr_no_bracket  goto 24
	expr  goto 54
	array_literal  goto 26
	actuals_opt  goto 55
	actuals_list  goto 56


state 24
	expr : expr_no_bracket .  (16)
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	PLUS  shift 41
	MINUS  shift 42
	TIMES  shift 43
	DIVIDE  shift 44
	EQ  shift 45
	NEQ  shift 46
	LT  shift 47
	LEQ  shift 48
	GT  shift 49
	GEQ  shift 50
	AND  shift 51
	OR  shift 52
	RBRACK  reduce 16
	SEMI  reduce 16
	RPAREN  reduce 16
	COMMA  reduce 16


state 25
	expr_no_bracket : LPAREN expr . RPAREN  (38)

	RPAREN  shift 57
	.  error


state 26
	expr : array_literal .  (15)

	.  reduce 15


state 27
	stmt : LBRACE stmt_list . RBRACE  (7)

	RBRACE  shift 58
	.  error


state 28
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)
	expr_no_bracket : MINUS expr_no_bracket .  (34)

	.  reduce 34


state 29
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)
	expr_no_bracket : NOT expr_no_bracket .  (35)

	.  reduce 35


state 30
	stmt : RETURN expr . SEMI  (6)

	SEMI  shift 59
	.  error


state 31
	stmt : IF LPAREN . expr RPAREN stmt  (8)
	stmt : IF LPAREN . expr RPAREN stmt ELSE stmt  (9)

	LBRACK  shift 23
	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 24
	expr  goto 60
	array_literal  goto 26


state 32
	stmt : FOR LPAREN . expr_opt SEMI expr SEMI expr_opt RPAREN stmt  (10)
	expr_opt : .  (13)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	SEMI  reduce 13

	expr_no_bracket  goto 61
	expr_opt  goto 62


state 33
	stmt : WHILE LPAREN . expr RPAREN stmt  (11)

	LBRACK  shift 23
	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 24
	expr  goto 63
	array_literal  goto 26


state 34
	bracket_expr_list : LBRACK . expr RBRACK  (44)
	bracket_expr_list : LBRACK . expr RBRACK bracket_expr_list  (45)

	LBRACK  shift 23
	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 24
	expr  goto 64
	array_literal  goto 26


state 35
	expr_no_bracket : ID LPAREN . actuals_opt RPAREN  (37)
	actuals_opt : .  (40)

	LBRACK  shift 23
	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	RPAREN  reduce 40

	expr_no_bracket  goto 24
	expr  goto 54
	array_literal  goto 26
	actuals_opt  goto 65
	actuals_list  goto 56


state 36
	expr_no_bracket : ID ASSIGN . expr  (36)

	LBRACK  shift 23
	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 24
	expr  goto 66
	array_literal  goto 26


state 37
	expr_no_bracket : ID bracket_expr_list .  (33)

	.  reduce 33


state 38
	program : stmt_list EOF .  (1)

	.  reduce 1


state 39
	stmt_list : stmt stmt_list .  (3)

	.  reduce 3


state 40
	stmt : expr_no_bracket SEMI .  (4)

	.  reduce 4


state 41
	expr_no_bracket : expr_no_bracket PLUS . expr_no_bracket  (21)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 67


state 42
	expr_no_bracket : expr_no_bracket MINUS . expr_no_bracket  (22)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 68


state 43
	expr_no_bracket : expr_no_bracket TIMES . expr_no_bracket  (23)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 69


state 44
	expr_no_bracket : expr_no_bracket DIVIDE . expr_no_bracket  (24)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 70


state 45
	expr_no_bracket : expr_no_bracket EQ . expr_no_bracket  (25)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 71


state 46
	expr_no_bracket : expr_no_bracket NEQ . expr_no_bracket  (26)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 72


state 47
	expr_no_bracket : expr_no_bracket LT . expr_no_bracket  (27)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 73


state 48
	expr_no_bracket : expr_no_bracket LEQ . expr_no_bracket  (28)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 74


state 49
	expr_no_bracket : expr_no_bracket GT . expr_no_bracket  (29)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 75


state 50
	expr_no_bracket : expr_no_bracket GEQ . expr_no_bracket  (30)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 76


state 51
	expr_no_bracket : expr_no_bracket AND . expr_no_bracket  (31)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 77


state 52
	expr_no_bracket : expr_no_bracket OR . expr_no_bracket  (32)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 78


state 53
	func_decl : VAR ID . LPAREN param_list RPAREN LBRACE stmt_list RBRACE  (46)

	LPAREN  shift 79
	.  error


state 54
	actuals_list : expr .  (42)

	.  reduce 42


state 55
	array_literal : LBRACK actuals_opt . RBRACK  (39)

	RBRACK  shift 80
	.  error


state 56
	actuals_opt : actuals_list .  (41)
	actuals_list : actuals_list . COMMA expr  (43)

	COMMA  shift 81
	RBRACK  reduce 41
	RPAREN  reduce 41


state 57
	expr_no_bracket : LPAREN expr RPAREN .  (38)

	.  reduce 38


state 58
	stmt : LBRACE stmt_list RBRACE .  (7)

	.  reduce 7


state 59
	stmt : RETURN expr SEMI .  (6)

	.  reduce 6


state 60
	stmt : IF LPAREN expr . RPAREN stmt  (8)
	stmt : IF LPAREN expr . RPAREN stmt ELSE stmt  (9)

	RPAREN  shift 82
	.  error


state 61
	expr_opt : expr_no_bracket .  (14)
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	PLUS  shift 41
	MINUS  shift 42
	TIMES  shift 43
	DIVIDE  shift 44
	EQ  shift 45
	NEQ  shift 46
	LT  shift 47
	LEQ  shift 48
	GT  shift 49
	GEQ  shift 50
	AND  shift 51
	OR  shift 52
	SEMI  reduce 14
	RPAREN  reduce 14


state 62
	stmt : FOR LPAREN expr_opt . SEMI expr SEMI expr_opt RPAREN stmt  (10)

	SEMI  shift 83
	.  error


state 63
	stmt : WHILE LPAREN expr . RPAREN stmt  (11)

	RPAREN  shift 84
	.  error


state 64
	bracket_expr_list : LBRACK expr . RBRACK  (44)
	bracket_expr_list : LBRACK expr . RBRACK bracket_expr_list  (45)

	RBRACK  shift 85
	.  error


state 65
	expr_no_bracket : ID LPAREN actuals_opt . RPAREN  (37)

	RPAREN  shift 86
	.  error


state 66
	expr_no_bracket : ID ASSIGN expr .  (36)

	.  reduce 36


state 67
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket PLUS expr_no_bracket .  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	TIMES  shift 43
	DIVIDE  shift 44
	RBRACK  reduce 21
	SEMI  reduce 21
	RPAREN  reduce 21
	COMMA  reduce 21
	PLUS  reduce 21
	MINUS  reduce 21
	EQ  reduce 21
	NEQ  reduce 21
	LT  reduce 21
	LEQ  reduce 21
	GT  reduce 21
	GEQ  reduce 21
	AND  reduce 21
	OR  reduce 21


state 68
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket MINUS expr_no_bracket .  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	TIMES  shift 43
	DIVIDE  shift 44
	RBRACK  reduce 22
	SEMI  reduce 22
	RPAREN  reduce 22
	COMMA  reduce 22
	PLUS  reduce 22
	MINUS  reduce 22
	EQ  reduce 22
	NEQ  reduce 22
	LT  reduce 22
	LEQ  reduce 22
	GT  reduce 22
	GEQ  reduce 22
	AND  reduce 22
	OR  reduce 22


state 69
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket TIMES expr_no_bracket .  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	.  reduce 23


state 70
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket DIVIDE expr_no_bracket .  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	.  reduce 24


state 71
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket EQ expr_no_bracket .  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	PLUS  shift 41
	MINUS  shift 42
	TIMES  shift 43
	DIVIDE  shift 44
	LT  shift 47
	LEQ  shift 48
	GT  shift 49
	GEQ  shift 50
	RBRACK  reduce 25
	SEMI  reduce 25
	RPAREN  reduce 25
	COMMA  reduce 25
	EQ  reduce 25
	NEQ  reduce 25
	AND  reduce 25
	OR  reduce 25


state 72
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket NEQ expr_no_bracket .  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	PLUS  shift 41
	MINUS  shift 42
	TIMES  shift 43
	DIVIDE  shift 44
	LT  shift 47
	LEQ  shift 48
	GT  shift 49
	GEQ  shift 50
	RBRACK  reduce 26
	SEMI  reduce 26
	RPAREN  reduce 26
	COMMA  reduce 26
	EQ  reduce 26
	NEQ  reduce 26
	AND  reduce 26
	OR  reduce 26


state 73
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket LT expr_no_bracket .  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	PLUS  shift 41
	MINUS  shift 42
	TIMES  shift 43
	DIVIDE  shift 44
	RBRACK  reduce 27
	SEMI  reduce 27
	RPAREN  reduce 27
	COMMA  reduce 27
	EQ  reduce 27
	NEQ  reduce 27
	LT  reduce 27
	LEQ  reduce 27
	GT  reduce 27
	GEQ  reduce 27
	AND  reduce 27
	OR  reduce 27


state 74
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket LEQ expr_no_bracket .  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	PLUS  shift 41
	MINUS  shift 42
	TIMES  shift 43
	DIVIDE  shift 44
	RBRACK  reduce 28
	SEMI  reduce 28
	RPAREN  reduce 28
	COMMA  reduce 28
	EQ  reduce 28
	NEQ  reduce 28
	LT  reduce 28
	LEQ  reduce 28
	GT  reduce 28
	GEQ  reduce 28
	AND  reduce 28
	OR  reduce 28


state 75
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket GT expr_no_bracket .  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	PLUS  shift 41
	MINUS  shift 42
	TIMES  shift 43
	DIVIDE  shift 44
	RBRACK  reduce 29
	SEMI  reduce 29
	RPAREN  reduce 29
	COMMA  reduce 29
	EQ  reduce 29
	NEQ  reduce 29
	LT  reduce 29
	LEQ  reduce 29
	GT  reduce 29
	GEQ  reduce 29
	AND  reduce 29
	OR  reduce 29


state 76
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket GEQ expr_no_bracket .  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	PLUS  shift 41
	MINUS  shift 42
	TIMES  shift 43
	DIVIDE  shift 44
	RBRACK  reduce 30
	SEMI  reduce 30
	RPAREN  reduce 30
	COMMA  reduce 30
	EQ  reduce 30
	NEQ  reduce 30
	LT  reduce 30
	LEQ  reduce 30
	GT  reduce 30
	GEQ  reduce 30
	AND  reduce 30
	OR  reduce 30


state 77
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket AND expr_no_bracket .  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)

	PLUS  shift 41
	MINUS  shift 42
	TIMES  shift 43
	DIVIDE  shift 44
	EQ  shift 45
	NEQ  shift 46
	LT  shift 47
	LEQ  shift 48
	GT  shift 49
	GEQ  shift 50
	RBRACK  reduce 31
	SEMI  reduce 31
	RPAREN  reduce 31
	COMMA  reduce 31
	AND  reduce 31
	OR  reduce 31


state 78
	expr_no_bracket : expr_no_bracket . PLUS expr_no_bracket  (21)
	expr_no_bracket : expr_no_bracket . MINUS expr_no_bracket  (22)
	expr_no_bracket : expr_no_bracket . TIMES expr_no_bracket  (23)
	expr_no_bracket : expr_no_bracket . DIVIDE expr_no_bracket  (24)
	expr_no_bracket : expr_no_bracket . EQ expr_no_bracket  (25)
	expr_no_bracket : expr_no_bracket . NEQ expr_no_bracket  (26)
	expr_no_bracket : expr_no_bracket . LT expr_no_bracket  (27)
	expr_no_bracket : expr_no_bracket . LEQ expr_no_bracket  (28)
	expr_no_bracket : expr_no_bracket . GT expr_no_bracket  (29)
	expr_no_bracket : expr_no_bracket . GEQ expr_no_bracket  (30)
	expr_no_bracket : expr_no_bracket . AND expr_no_bracket  (31)
	expr_no_bracket : expr_no_bracket . OR expr_no_bracket  (32)
	expr_no_bracket : expr_no_bracket OR expr_no_bracket .  (32)

	PLUS  shift 41
	MINUS  shift 42
	TIMES  shift 43
	DIVIDE  shift 44
	EQ  shift 45
	NEQ  shift 46
	LT  shift 47
	LEQ  shift 48
	GT  shift 49
	GEQ  shift 50
	AND  shift 51
	RBRACK  reduce 32
	SEMI  reduce 32
	RPAREN  reduce 32
	COMMA  reduce 32
	OR  reduce 32


state 79
	func_decl : VAR ID LPAREN . param_list RPAREN LBRACE stmt_list RBRACE  (46)
	param_list : .  (47)

	ID  shift 87
	RPAREN  reduce 47

	param_list  goto 88


state 80
	array_literal : LBRACK actuals_opt RBRACK .  (39)

	.  reduce 39


state 81
	actuals_list : actuals_list COMMA . expr  (43)

	LBRACK  shift 23
	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 24
	expr  goto 89
	array_literal  goto 26


state 82
	stmt : IF LPAREN expr RPAREN . stmt  (8)
	stmt : IF LPAREN expr RPAREN . stmt ELSE stmt  (9)

	VAR  shift 3
	SEMI  shift 4
	LPAREN  shift 5
	LBRACE  shift 6
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	RETURN  shift 11
	IF  shift 12
	FOR  shift 13
	WHILE  shift 14
	LITERAL  shift 15
	ID  shift 16
	.  error

	stmt  goto 90
	expr_no_bracket  goto 20


state 83
	stmt : FOR LPAREN expr_opt SEMI . expr SEMI expr_opt RPAREN stmt  (10)

	LBRACK  shift 23
	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	.  error

	expr_no_bracket  goto 24
	expr  goto 91
	array_literal  goto 26


state 84
	stmt : WHILE LPAREN expr RPAREN . stmt  (11)

	VAR  shift 3
	SEMI  shift 4
	LPAREN  shift 5
	LBRACE  shift 6
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	RETURN  shift 11
	IF  shift 12
	FOR  shift 13
	WHILE  shift 14
	LITERAL  shift 15
	ID  shift 16
	.  error

	stmt  goto 92
	expr_no_bracket  goto 20


state 85
	bracket_expr_list : LBRACK expr RBRACK .  (44)
	bracket_expr_list : LBRACK expr RBRACK . bracket_expr_list  (45)

	LBRACK  shift 34
	RBRACK  reduce 44
	SEMI  reduce 44
	RPAREN  reduce 44
	COMMA  reduce 44
	PLUS  reduce 44
	MINUS  reduce 44
	TIMES  reduce 44
	DIVIDE  reduce 44
	EQ  reduce 44
	NEQ  reduce 44
	LT  reduce 44
	LEQ  reduce 44
	GT  reduce 44
	GEQ  reduce 44
	AND  reduce 44
	OR  reduce 44

	bracket_expr_list  goto 93


state 86
	expr_no_bracket : ID LPAREN actuals_opt RPAREN .  (37)

	.  reduce 37


state 87
	param_list : ID .  (48)
	param_list : ID . COMMA param_list  (49)

	COMMA  shift 94
	RPAREN  reduce 48


state 88
	func_decl : VAR ID LPAREN param_list . RPAREN LBRACE stmt_list RBRACE  (46)

	RPAREN  shift 95
	.  error


state 89
	actuals_list : actuals_list COMMA expr .  (43)

	.  reduce 43


state 90
	stmt : IF LPAREN expr RPAREN stmt .  (8)
	stmt : IF LPAREN expr RPAREN stmt . ELSE stmt  (9)

	ELSE  shift 96
	VAR  reduce 8
	SEMI  reduce 8
	LPAREN  reduce 8
	LBRACE  reduce 8
	RBRACE  reduce 8
	MINUS  reduce 8
	NOT  reduce 8
	TRUE  reduce 8
	FALSE  reduce 8
	RETURN  reduce 8
	IF  reduce 8
	FOR  reduce 8
	WHILE  reduce 8
	LITERAL  reduce 8
	ID  reduce 8
	EOF  reduce 8


state 91
	stmt : FOR LPAREN expr_opt SEMI expr . SEMI expr_opt RPAREN stmt  (10)

	SEMI  shift 97
	.  error


state 92
	stmt : WHILE LPAREN expr RPAREN stmt .  (11)

	.  reduce 11


state 93
	bracket_expr_list : LBRACK expr RBRACK bracket_expr_list .  (45)

	.  reduce 45


state 94
	param_list : ID COMMA . param_list  (49)
	param_list : .  (47)

	ID  shift 87
	RPAREN  reduce 47

	param_list  goto 98


state 95
	func_decl : VAR ID LPAREN param_list RPAREN . LBRACE stmt_list RBRACE  (46)

	LBRACE  shift 99
	.  error


state 96
	stmt : IF LPAREN expr RPAREN stmt ELSE . stmt  (9)

	VAR  shift 3
	SEMI  shift 4
	LPAREN  shift 5
	LBRACE  shift 6
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	RETURN  shift 11
	IF  shift 12
	FOR  shift 13
	WHILE  shift 14
	LITERAL  shift 15
	ID  shift 16
	.  error

	stmt  goto 100
	expr_no_bracket  goto 20


state 97
	stmt : FOR LPAREN expr_opt SEMI expr SEMI . expr_opt RPAREN stmt  (10)
	expr_opt : .  (13)

	LPAREN  shift 5
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	LITERAL  shift 15
	ID  shift 16
	RPAREN  reduce 13

	expr_no_bracket  goto 61
	expr_opt  goto 101


state 98
	param_list : ID COMMA param_list .  (49)

	.  reduce 49


state 99
	func_decl : VAR ID LPAREN param_list RPAREN LBRACE . stmt_list RBRACE  (46)
	stmt_list : .  (2)

	VAR  shift 3
	SEMI  shift 4
	LPAREN  shift 5
	LBRACE  shift 6
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	RETURN  shift 11
	IF  shift 12
	FOR  shift 13
	WHILE  shift 14
	LITERAL  shift 15
	ID  shift 16
	RBRACE  reduce 2

	stmt_list  goto 102
	stmt  goto 19
	expr_no_bracket  goto 20


state 100
	stmt : IF LPAREN expr RPAREN stmt ELSE stmt .  (9)

	.  reduce 9


state 101
	stmt : FOR LPAREN expr_opt SEMI expr SEMI expr_opt . RPAREN stmt  (10)

	RPAREN  shift 103
	.  error


state 102
	func_decl : VAR ID LPAREN param_list RPAREN LBRACE stmt_list . RBRACE  (46)

	RBRACE  shift 104
	.  error


state 103
	stmt : FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN . stmt  (10)

	VAR  shift 3
	SEMI  shift 4
	LPAREN  shift 5
	LBRACE  shift 6
	MINUS  shift 7
	NOT  shift 8
	TRUE  shift 9
	FALSE  shift 10
	RETURN  shift 11
	IF  shift 12
	FOR  shift 13
	WHILE  shift 14
	LITERAL  shift 15
	ID  shift 16
	.  error

	stmt  goto 105
	expr_no_bracket  goto 20


state 104
	func_decl : VAR ID LPAREN param_list RPAREN LBRACE stmt_list RBRACE .  (46)

	.  reduce 46


state 105
	stmt : FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt .  (10)

	.  reduce 10


46 terminals, 14 nonterminals
51 grammar rules, 106 states
