State 0:
program' -> . program [ # ]
-- On stmts shift to state 1
-- On program shift to state 124
-- On WHILE reduce production stmts -> 
-- On TRUE reduce production stmts -> 
-- On STRUCT reduce production stmts -> 
-- On STRINGLIT reduce production stmts -> 
-- On RETURN reduce production stmts -> 
-- On NOT reduce production stmts -> 
-- On MINUS reduce production stmts -> 
-- On LPAREN reduce production stmts -> 
-- On LBRACE reduce production stmts -> 
-- On INTLIT reduce production stmts -> 
-- On IF reduce production stmts -> 
-- On ID reduce production stmts -> 
-- On GLOBAL reduce production stmts -> 
-- On FOR reduce production stmts -> 
-- On FLOATLIT reduce production stmts -> 
-- On FALSE reduce production stmts -> 
-- On EOF reduce production stmts -> 
-- On DEF reduce production stmts -> 

State 1:
program -> stmts . EOF [ # ]
stmts -> stmts . stmt [ WHILE TRUE STRUCT STRINGLIT RETURN NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF DEF ]
-- On WHILE shift to state 2
-- On TRUE shift to state 4
-- On STRUCT shift to state 60
-- On STRINGLIT shift to state 7
-- On RETURN shift to state 82
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACE shift to state 87
-- On INTLIT shift to state 11
-- On IF shift to state 90
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FOR shift to state 94
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On EOF shift to state 123
-- On DEF shift to state 102
-- On stmt shift to state 111
-- On expr shift to state 105

State 2:
stmt -> WHILE . LPAREN expr RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On LPAREN shift to state 3

State 3:
stmt -> WHILE LPAREN . expr RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 58

State 4:
expr -> TRUE . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES reduce production expr -> TRUE 
-- On SEMI reduce production expr -> TRUE 
-- On RPAREN reduce production expr -> TRUE 
-- On PLUS reduce production expr -> TRUE 
-- On OR reduce production expr -> TRUE 
-- On NEQ reduce production expr -> TRUE 
-- On MINUS reduce production expr -> TRUE 
-- On LT reduce production expr -> TRUE 
-- On LEQ reduce production expr -> TRUE 
-- On GT reduce production expr -> TRUE 
-- On GEQ reduce production expr -> TRUE 
-- On EQ reduce production expr -> TRUE 
-- On DOT reduce production expr -> TRUE 
-- On DIVIDE reduce production expr -> TRUE 
-- On COMMA reduce production expr -> TRUE 
-- On AND reduce production expr -> TRUE 

State 5:
expr -> STRUCT . ID [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On ID shift to state 6

State 6:
expr -> STRUCT ID . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES reduce production expr -> STRUCT ID 
-- On SEMI reduce production expr -> STRUCT ID 
-- On RPAREN reduce production expr -> STRUCT ID 
-- On PLUS reduce production expr -> STRUCT ID 
-- On OR reduce production expr -> STRUCT ID 
-- On NEQ reduce production expr -> STRUCT ID 
-- On MINUS reduce production expr -> STRUCT ID 
-- On LT reduce production expr -> STRUCT ID 
-- On LEQ reduce production expr -> STRUCT ID 
-- On GT reduce production expr -> STRUCT ID 
-- On GEQ reduce production expr -> STRUCT ID 
-- On EQ reduce production expr -> STRUCT ID 
-- On DOT reduce production expr -> STRUCT ID 
-- On DIVIDE reduce production expr -> STRUCT ID 
-- On COMMA reduce production expr -> STRUCT ID 
-- On AND reduce production expr -> STRUCT ID 

State 7:
expr -> STRINGLIT . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES reduce production expr -> STRINGLIT 
-- On SEMI reduce production expr -> STRINGLIT 
-- On RPAREN reduce production expr -> STRINGLIT 
-- On PLUS reduce production expr -> STRINGLIT 
-- On OR reduce production expr -> STRINGLIT 
-- On NEQ reduce production expr -> STRINGLIT 
-- On MINUS reduce production expr -> STRINGLIT 
-- On LT reduce production expr -> STRINGLIT 
-- On LEQ reduce production expr -> STRINGLIT 
-- On GT reduce production expr -> STRINGLIT 
-- On GEQ reduce production expr -> STRINGLIT 
-- On EQ reduce production expr -> STRINGLIT 
-- On DOT reduce production expr -> STRINGLIT 
-- On DIVIDE reduce production expr -> STRINGLIT 
-- On COMMA reduce production expr -> STRINGLIT 
-- On AND reduce production expr -> STRINGLIT 

State 8:
expr -> NOT . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 57

State 9:
expr -> MINUS . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 56

State 10:
expr -> LPAREN . expr RPAREN [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 54

State 11:
expr -> INTLIT . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES reduce production expr -> INTLIT 
-- On SEMI reduce production expr -> INTLIT 
-- On RPAREN reduce production expr -> INTLIT 
-- On PLUS reduce production expr -> INTLIT 
-- On OR reduce production expr -> INTLIT 
-- On NEQ reduce production expr -> INTLIT 
-- On MINUS reduce production expr -> INTLIT 
-- On LT reduce production expr -> INTLIT 
-- On LEQ reduce production expr -> INTLIT 
-- On GT reduce production expr -> INTLIT 
-- On GEQ reduce production expr -> INTLIT 
-- On EQ reduce production expr -> INTLIT 
-- On DOT reduce production expr -> INTLIT 
-- On DIVIDE reduce production expr -> INTLIT 
-- On COMMA reduce production expr -> INTLIT 
-- On AND reduce production expr -> INTLIT 

State 12:
expr -> ID . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> ID . ASSIGN expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> ID . LPAREN actuals_opt RPAREN [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On LPAREN shift to state 13
-- On ASSIGN shift to state 52
-- On TIMES reduce production expr -> ID 
-- On SEMI reduce production expr -> ID 
-- On RPAREN reduce production expr -> ID 
-- On PLUS reduce production expr -> ID 
-- On OR reduce production expr -> ID 
-- On NEQ reduce production expr -> ID 
-- On MINUS reduce production expr -> ID 
-- On LT reduce production expr -> ID 
-- On LEQ reduce production expr -> ID 
-- On GT reduce production expr -> ID 
-- On GEQ reduce production expr -> ID 
-- On EQ reduce production expr -> ID 
-- On DOT reduce production expr -> ID 
-- On DIVIDE reduce production expr -> ID 
-- On COMMA reduce production expr -> ID 
-- On AND reduce production expr -> ID 

State 13:
expr -> ID LPAREN . actuals_opt RPAREN [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 46
-- On actuals_opt shift to state 47
-- On actuals_list shift to state 49
-- On RPAREN reduce production actuals_opt -> 

State 14:
expr -> GLOBAL . ID ASSIGN expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On ID shift to state 15

State 15:
expr -> GLOBAL ID . ASSIGN expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On ASSIGN shift to state 16

State 16:
expr -> GLOBAL ID ASSIGN . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 19

State 17:
expr -> FLOATLIT . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES reduce production expr -> FLOATLIT 
-- On SEMI reduce production expr -> FLOATLIT 
-- On RPAREN reduce production expr -> FLOATLIT 
-- On PLUS reduce production expr -> FLOATLIT 
-- On OR reduce production expr -> FLOATLIT 
-- On NEQ reduce production expr -> FLOATLIT 
-- On MINUS reduce production expr -> FLOATLIT 
-- On LT reduce production expr -> FLOATLIT 
-- On LEQ reduce production expr -> FLOATLIT 
-- On GT reduce production expr -> FLOATLIT 
-- On GEQ reduce production expr -> FLOATLIT 
-- On EQ reduce production expr -> FLOATLIT 
-- On DOT reduce production expr -> FLOATLIT 
-- On DIVIDE reduce production expr -> FLOATLIT 
-- On COMMA reduce production expr -> FLOATLIT 
-- On AND reduce production expr -> FLOATLIT 

State 18:
expr -> FALSE . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES reduce production expr -> FALSE 
-- On SEMI reduce production expr -> FALSE 
-- On RPAREN reduce production expr -> FALSE 
-- On PLUS reduce production expr -> FALSE 
-- On OR reduce production expr -> FALSE 
-- On NEQ reduce production expr -> FALSE 
-- On MINUS reduce production expr -> FALSE 
-- On LT reduce production expr -> FALSE 
-- On LEQ reduce production expr -> FALSE 
-- On GT reduce production expr -> FALSE 
-- On GEQ reduce production expr -> FALSE 
-- On EQ reduce production expr -> FALSE 
-- On DOT reduce production expr -> FALSE 
-- On DIVIDE reduce production expr -> FALSE 
-- On COMMA reduce production expr -> FALSE 
-- On AND reduce production expr -> FALSE 

State 19:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> GLOBAL ID ASSIGN expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On AND shift to state 44
-- On SEMI reduce production expr -> GLOBAL ID ASSIGN expr 
-- On RPAREN reduce production expr -> GLOBAL ID ASSIGN expr 
-- On COMMA reduce production expr -> GLOBAL ID ASSIGN expr 

State 20:
expr -> expr TIMES . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 21

State 21:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr TIMES expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On DOT shift to state 22
-- On TIMES reduce production expr -> expr TIMES expr 
-- On SEMI reduce production expr -> expr TIMES expr 
-- On RPAREN reduce production expr -> expr TIMES expr 
-- On PLUS reduce production expr -> expr TIMES expr 
-- On OR reduce production expr -> expr TIMES expr 
-- On NEQ reduce production expr -> expr TIMES expr 
-- On MINUS reduce production expr -> expr TIMES expr 
-- On LT reduce production expr -> expr TIMES expr 
-- On LEQ reduce production expr -> expr TIMES expr 
-- On GT reduce production expr -> expr TIMES expr 
-- On GEQ reduce production expr -> expr TIMES expr 
-- On EQ reduce production expr -> expr TIMES expr 
-- On DIVIDE reduce production expr -> expr TIMES expr 
-- On COMMA reduce production expr -> expr TIMES expr 
-- On AND reduce production expr -> expr TIMES expr 

State 22:
expr -> expr DOT . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 23

State 23:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr DOT expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On DOT shift to state 22
-- On TIMES reduce production expr -> expr DOT expr 
-- On SEMI reduce production expr -> expr DOT expr 
-- On RPAREN reduce production expr -> expr DOT expr 
-- On PLUS reduce production expr -> expr DOT expr 
-- On OR reduce production expr -> expr DOT expr 
-- On NEQ reduce production expr -> expr DOT expr 
-- On MINUS reduce production expr -> expr DOT expr 
-- On LT reduce production expr -> expr DOT expr 
-- On LEQ reduce production expr -> expr DOT expr 
-- On GT reduce production expr -> expr DOT expr 
-- On GEQ reduce production expr -> expr DOT expr 
-- On EQ reduce production expr -> expr DOT expr 
-- On DIVIDE reduce production expr -> expr DOT expr 
-- On COMMA reduce production expr -> expr DOT expr 
-- On AND reduce production expr -> expr DOT expr 

State 24:
expr -> expr PLUS . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 25

State 25:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr PLUS expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On SEMI reduce production expr -> expr PLUS expr 
-- On RPAREN reduce production expr -> expr PLUS expr 
-- On PLUS reduce production expr -> expr PLUS expr 
-- On OR reduce production expr -> expr PLUS expr 
-- On NEQ reduce production expr -> expr PLUS expr 
-- On MINUS reduce production expr -> expr PLUS expr 
-- On LT reduce production expr -> expr PLUS expr 
-- On LEQ reduce production expr -> expr PLUS expr 
-- On GT reduce production expr -> expr PLUS expr 
-- On GEQ reduce production expr -> expr PLUS expr 
-- On EQ reduce production expr -> expr PLUS expr 
-- On COMMA reduce production expr -> expr PLUS expr 
-- On AND reduce production expr -> expr PLUS expr 

State 26:
expr -> expr DIVIDE . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 27

State 27:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr DIVIDE expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On DOT shift to state 22
-- On TIMES reduce production expr -> expr DIVIDE expr 
-- On SEMI reduce production expr -> expr DIVIDE expr 
-- On RPAREN reduce production expr -> expr DIVIDE expr 
-- On PLUS reduce production expr -> expr DIVIDE expr 
-- On OR reduce production expr -> expr DIVIDE expr 
-- On NEQ reduce production expr -> expr DIVIDE expr 
-- On MINUS reduce production expr -> expr DIVIDE expr 
-- On LT reduce production expr -> expr DIVIDE expr 
-- On LEQ reduce production expr -> expr DIVIDE expr 
-- On GT reduce production expr -> expr DIVIDE expr 
-- On GEQ reduce production expr -> expr DIVIDE expr 
-- On EQ reduce production expr -> expr DIVIDE expr 
-- On DIVIDE reduce production expr -> expr DIVIDE expr 
-- On COMMA reduce production expr -> expr DIVIDE expr 
-- On AND reduce production expr -> expr DIVIDE expr 

State 28:
expr -> expr OR . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 29

State 29:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr OR expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On AND shift to state 44
-- On SEMI reduce production expr -> expr OR expr 
-- On RPAREN reduce production expr -> expr OR expr 
-- On OR reduce production expr -> expr OR expr 
-- On COMMA reduce production expr -> expr OR expr 

State 30:
expr -> expr NEQ . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 31

State 31:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr NEQ expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On SEMI reduce production expr -> expr NEQ expr 
-- On RPAREN reduce production expr -> expr NEQ expr 
-- On OR reduce production expr -> expr NEQ expr 
-- On NEQ reduce production expr -> expr NEQ expr 
-- On EQ reduce production expr -> expr NEQ expr 
-- On COMMA reduce production expr -> expr NEQ expr 
-- On AND reduce production expr -> expr NEQ expr 

State 32:
expr -> expr MINUS . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 33

State 33:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr MINUS expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On SEMI reduce production expr -> expr MINUS expr 
-- On RPAREN reduce production expr -> expr MINUS expr 
-- On PLUS reduce production expr -> expr MINUS expr 
-- On OR reduce production expr -> expr MINUS expr 
-- On NEQ reduce production expr -> expr MINUS expr 
-- On MINUS reduce production expr -> expr MINUS expr 
-- On LT reduce production expr -> expr MINUS expr 
-- On LEQ reduce production expr -> expr MINUS expr 
-- On GT reduce production expr -> expr MINUS expr 
-- On GEQ reduce production expr -> expr MINUS expr 
-- On EQ reduce production expr -> expr MINUS expr 
-- On COMMA reduce production expr -> expr MINUS expr 
-- On AND reduce production expr -> expr MINUS expr 

State 34:
expr -> expr LT . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 35

State 35:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr LT expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On MINUS shift to state 32
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On SEMI reduce production expr -> expr LT expr 
-- On RPAREN reduce production expr -> expr LT expr 
-- On OR reduce production expr -> expr LT expr 
-- On NEQ reduce production expr -> expr LT expr 
-- On LT reduce production expr -> expr LT expr 
-- On LEQ reduce production expr -> expr LT expr 
-- On GT reduce production expr -> expr LT expr 
-- On GEQ reduce production expr -> expr LT expr 
-- On EQ reduce production expr -> expr LT expr 
-- On COMMA reduce production expr -> expr LT expr 
-- On AND reduce production expr -> expr LT expr 

State 36:
expr -> expr LEQ . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 37

State 37:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr LEQ expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On MINUS shift to state 32
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On SEMI reduce production expr -> expr LEQ expr 
-- On RPAREN reduce production expr -> expr LEQ expr 
-- On OR reduce production expr -> expr LEQ expr 
-- On NEQ reduce production expr -> expr LEQ expr 
-- On LT reduce production expr -> expr LEQ expr 
-- On LEQ reduce production expr -> expr LEQ expr 
-- On GT reduce production expr -> expr LEQ expr 
-- On GEQ reduce production expr -> expr LEQ expr 
-- On EQ reduce production expr -> expr LEQ expr 
-- On COMMA reduce production expr -> expr LEQ expr 
-- On AND reduce production expr -> expr LEQ expr 

State 38:
expr -> expr GT . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 39

State 39:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr GT expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On MINUS shift to state 32
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On SEMI reduce production expr -> expr GT expr 
-- On RPAREN reduce production expr -> expr GT expr 
-- On OR reduce production expr -> expr GT expr 
-- On NEQ reduce production expr -> expr GT expr 
-- On LT reduce production expr -> expr GT expr 
-- On LEQ reduce production expr -> expr GT expr 
-- On GT reduce production expr -> expr GT expr 
-- On GEQ reduce production expr -> expr GT expr 
-- On EQ reduce production expr -> expr GT expr 
-- On COMMA reduce production expr -> expr GT expr 
-- On AND reduce production expr -> expr GT expr 

State 40:
expr -> expr GEQ . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 41

State 41:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr GEQ expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On MINUS shift to state 32
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On SEMI reduce production expr -> expr GEQ expr 
-- On RPAREN reduce production expr -> expr GEQ expr 
-- On OR reduce production expr -> expr GEQ expr 
-- On NEQ reduce production expr -> expr GEQ expr 
-- On LT reduce production expr -> expr GEQ expr 
-- On LEQ reduce production expr -> expr GEQ expr 
-- On GT reduce production expr -> expr GEQ expr 
-- On GEQ reduce production expr -> expr GEQ expr 
-- On EQ reduce production expr -> expr GEQ expr 
-- On COMMA reduce production expr -> expr GEQ expr 
-- On AND reduce production expr -> expr GEQ expr 

State 42:
expr -> expr EQ . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 43

State 43:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr EQ expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On SEMI reduce production expr -> expr EQ expr 
-- On RPAREN reduce production expr -> expr EQ expr 
-- On OR reduce production expr -> expr EQ expr 
-- On NEQ reduce production expr -> expr EQ expr 
-- On EQ reduce production expr -> expr EQ expr 
-- On COMMA reduce production expr -> expr EQ expr 
-- On AND reduce production expr -> expr EQ expr 

State 44:
expr -> expr AND . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 45

State 45:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr AND expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On SEMI reduce production expr -> expr AND expr 
-- On RPAREN reduce production expr -> expr AND expr 
-- On OR reduce production expr -> expr AND expr 
-- On COMMA reduce production expr -> expr AND expr 
-- On AND reduce production expr -> expr AND expr 

State 46:
actuals_list -> expr . [ RPAREN COMMA ]
expr -> expr . PLUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On AND shift to state 44
-- On RPAREN reduce production actuals_list -> expr 
-- On COMMA reduce production actuals_list -> expr 

State 47:
expr -> ID LPAREN actuals_opt . RPAREN [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On RPAREN shift to state 48

State 48:
expr -> ID LPAREN actuals_opt RPAREN . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On SEMI reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On RPAREN reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On PLUS reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On OR reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On NEQ reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On MINUS reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On LT reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On LEQ reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On GT reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On GEQ reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On EQ reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On DOT reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On DIVIDE reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On COMMA reduce production expr -> ID LPAREN actuals_opt RPAREN 
-- On AND reduce production expr -> ID LPAREN actuals_opt RPAREN 

State 49:
actuals_list -> actuals_list . COMMA expr [ RPAREN COMMA ]
actuals_opt -> actuals_list . [ RPAREN ]
-- On COMMA shift to state 50
-- On RPAREN reduce production actuals_opt -> actuals_list 

State 50:
actuals_list -> actuals_list COMMA . expr [ RPAREN COMMA ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 51

State 51:
actuals_list -> actuals_list COMMA expr . [ RPAREN COMMA ]
expr -> expr . PLUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On AND shift to state 44
-- On RPAREN reduce production actuals_list -> actuals_list COMMA expr 
-- On COMMA reduce production actuals_list -> actuals_list COMMA expr 

State 52:
expr -> ID ASSIGN . expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 53

State 53:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> ID ASSIGN expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On AND shift to state 44
-- On SEMI reduce production expr -> ID ASSIGN expr 
-- On RPAREN reduce production expr -> ID ASSIGN expr 
-- On COMMA reduce production expr -> ID ASSIGN expr 

State 54:
expr -> expr . PLUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DOT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> LPAREN expr . RPAREN [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES shift to state 20
-- On RPAREN shift to state 55
-- On PLUS shift to state 24
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On AND shift to state 44

State 55:
expr -> LPAREN expr RPAREN . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On TIMES reduce production expr -> LPAREN expr RPAREN 
-- On SEMI reduce production expr -> LPAREN expr RPAREN 
-- On RPAREN reduce production expr -> LPAREN expr RPAREN 
-- On PLUS reduce production expr -> LPAREN expr RPAREN 
-- On OR reduce production expr -> LPAREN expr RPAREN 
-- On NEQ reduce production expr -> LPAREN expr RPAREN 
-- On MINUS reduce production expr -> LPAREN expr RPAREN 
-- On LT reduce production expr -> LPAREN expr RPAREN 
-- On LEQ reduce production expr -> LPAREN expr RPAREN 
-- On GT reduce production expr -> LPAREN expr RPAREN 
-- On GEQ reduce production expr -> LPAREN expr RPAREN 
-- On EQ reduce production expr -> LPAREN expr RPAREN 
-- On DOT reduce production expr -> LPAREN expr RPAREN 
-- On DIVIDE reduce production expr -> LPAREN expr RPAREN 
-- On COMMA reduce production expr -> LPAREN expr RPAREN 
-- On AND reduce production expr -> LPAREN expr RPAREN 

State 56:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> MINUS expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On DOT shift to state 22
-- On TIMES reduce production expr -> MINUS expr 
-- On SEMI reduce production expr -> MINUS expr 
-- On RPAREN reduce production expr -> MINUS expr 
-- On PLUS reduce production expr -> MINUS expr 
-- On OR reduce production expr -> MINUS expr 
-- On NEQ reduce production expr -> MINUS expr 
-- On MINUS reduce production expr -> MINUS expr 
-- On LT reduce production expr -> MINUS expr 
-- On LEQ reduce production expr -> MINUS expr 
-- On GT reduce production expr -> MINUS expr 
-- On GEQ reduce production expr -> MINUS expr 
-- On EQ reduce production expr -> MINUS expr 
-- On DIVIDE reduce production expr -> MINUS expr 
-- On COMMA reduce production expr -> MINUS expr 
-- On AND reduce production expr -> MINUS expr 

State 57:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
expr -> NOT expr . [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE COMMA AND ]
-- On DOT shift to state 22
-- On TIMES reduce production expr -> NOT expr 
-- On SEMI reduce production expr -> NOT expr 
-- On RPAREN reduce production expr -> NOT expr 
-- On PLUS reduce production expr -> NOT expr 
-- On OR reduce production expr -> NOT expr 
-- On NEQ reduce production expr -> NOT expr 
-- On MINUS reduce production expr -> NOT expr 
-- On LT reduce production expr -> NOT expr 
-- On LEQ reduce production expr -> NOT expr 
-- On GT reduce production expr -> NOT expr 
-- On GEQ reduce production expr -> NOT expr 
-- On EQ reduce production expr -> NOT expr 
-- On DIVIDE reduce production expr -> NOT expr 
-- On COMMA reduce production expr -> NOT expr 
-- On AND reduce production expr -> NOT expr 

State 58:
expr -> expr . PLUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DOT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
stmt -> WHILE LPAREN expr . RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On TIMES shift to state 20
-- On RPAREN shift to state 59
-- On PLUS shift to state 24
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On AND shift to state 44

State 59:
stmt -> WHILE LPAREN expr RPAREN . stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE shift to state 2
-- On TRUE shift to state 4
-- On STRUCT shift to state 60
-- On STRINGLIT shift to state 7
-- On RETURN shift to state 82
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACE shift to state 87
-- On INTLIT shift to state 11
-- On IF shift to state 90
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FOR shift to state 94
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On DEF shift to state 102
-- On stmt shift to state 122
-- On expr shift to state 105

State 60:
expr -> STRUCT . ID [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
stmt -> STRUCT . struct_decl [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On ID shift to state 61
-- On struct_decl shift to state 121

State 61:
expr -> STRUCT ID . [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
struct_decl -> ID . LBRACE vdecl_list struc_func_decls RBRACE SEMI [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On LBRACE shift to state 62
-- On TIMES reduce production expr -> STRUCT ID 
-- On SEMI reduce production expr -> STRUCT ID 
-- On PLUS reduce production expr -> STRUCT ID 
-- On OR reduce production expr -> STRUCT ID 
-- On NEQ reduce production expr -> STRUCT ID 
-- On MINUS reduce production expr -> STRUCT ID 
-- On LT reduce production expr -> STRUCT ID 
-- On LEQ reduce production expr -> STRUCT ID 
-- On GT reduce production expr -> STRUCT ID 
-- On GEQ reduce production expr -> STRUCT ID 
-- On EQ reduce production expr -> STRUCT ID 
-- On DOT reduce production expr -> STRUCT ID 
-- On DIVIDE reduce production expr -> STRUCT ID 
-- On AND reduce production expr -> STRUCT ID 

State 62:
struct_decl -> ID LBRACE . vdecl_list struc_func_decls RBRACE SEMI [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On vdecl_list shift to state 63
-- On VOID reduce production vdecl_list -> 
-- On STRING reduce production vdecl_list -> 
-- On RBRACE reduce production vdecl_list -> 
-- On INT reduce production vdecl_list -> 
-- On FLOAT reduce production vdecl_list -> 
-- On BOOL reduce production vdecl_list -> 

State 63:
struct_decl -> ID LBRACE vdecl_list . struc_func_decls RBRACE SEMI [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
vdecl_list -> vdecl_list . vdecl [ VOID STRING RBRACE INT FLOAT BOOL ]
-- On STRING shift to state 64
-- On INT shift to state 65
-- On FLOAT shift to state 66
-- On BOOL shift to state 67
-- On vdecl shift to state 68
-- On struc_func_decls shift to state 69
-- On any_typ_not_void shift to state 118
-- On VOID reduce production struc_func_decls -> 
-- On STRING reduce production struc_func_decls -> 
-- On RBRACE reduce production struc_func_decls -> 
-- On INT reduce production struc_func_decls -> 
-- On FLOAT reduce production struc_func_decls -> 
-- On BOOL reduce production struc_func_decls -> 
** Conflict on STRING INT FLOAT BOOL

State 64:
any_typ_not_void -> STRING . [ ID ]
-- On ID reduce production any_typ_not_void -> STRING 

State 65:
any_typ_not_void -> INT . [ ID ]
-- On ID reduce production any_typ_not_void -> INT 

State 66:
any_typ_not_void -> FLOAT . [ ID ]
-- On ID reduce production any_typ_not_void -> FLOAT 

State 67:
any_typ_not_void -> BOOL . [ ID ]
-- On ID reduce production any_typ_not_void -> BOOL 

State 68:
vdecl_list -> vdecl_list vdecl . [ VOID STRING RBRACE INT FLOAT BOOL ]
-- On VOID reduce production vdecl_list -> vdecl_list vdecl 
-- On STRING reduce production vdecl_list -> vdecl_list vdecl 
-- On RBRACE reduce production vdecl_list -> vdecl_list vdecl 
-- On INT reduce production vdecl_list -> vdecl_list vdecl 
-- On FLOAT reduce production vdecl_list -> vdecl_list vdecl 
-- On BOOL reduce production vdecl_list -> vdecl_list vdecl 

State 69:
struc_func_decls -> struc_func_decls . func [ VOID STRING RBRACE INT FLOAT BOOL ]
struct_decl -> ID LBRACE vdecl_list struc_func_decls . RBRACE SEMI [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On VOID shift to state 70
-- On STRING shift to state 64
-- On RBRACE shift to state 71
-- On INT shift to state 65
-- On FLOAT shift to state 66
-- On BOOL shift to state 67
-- On func shift to state 73
-- On any_typ_not_void shift to state 74
-- On any_typ shift to state 75

State 70:
any_typ -> VOID . [ ID ]
-- On ID reduce production any_typ -> VOID 

State 71:
struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE . SEMI [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On SEMI shift to state 72

State 72:
struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI . [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On TRUE reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On STRUCT reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On STRINGLIT reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On RETURN reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On RBRACE reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On NOT reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On MINUS reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On LPAREN reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On LBRACE reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On INTLIT reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On IF reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On ID reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On GLOBAL reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On FOR reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On FLOATLIT reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On FALSE reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On EOF reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On ELSE reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 
-- On DEF reduce production struct_decl -> ID LBRACE vdecl_list struc_func_decls RBRACE SEMI 

State 73:
struc_func_decls -> struc_func_decls func . [ VOID STRING RBRACE INT FLOAT BOOL ]
-- On VOID reduce production struc_func_decls -> struc_func_decls func 
-- On STRING reduce production struc_func_decls -> struc_func_decls func 
-- On RBRACE reduce production struc_func_decls -> struc_func_decls func 
-- On INT reduce production struc_func_decls -> struc_func_decls func 
-- On FLOAT reduce production struc_func_decls -> struc_func_decls func 
-- On BOOL reduce production struc_func_decls -> struc_func_decls func 

State 74:
any_typ -> any_typ_not_void . [ ID ]
-- On ID reduce production any_typ -> any_typ_not_void 

State 75:
func -> any_typ . ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE [ WHILE VOID TRUE STRUCT STRINGLIT STRING RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT INT IF ID GLOBAL FOR FLOATLIT FLOAT FALSE EOF ELSE DEF BOOL ]
-- On ID shift to state 76

State 76:
func -> any_typ ID . LPAREN formals_opt RPAREN LBRACE stmts RBRACE [ WHILE VOID TRUE STRUCT STRINGLIT STRING RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT INT IF ID GLOBAL FOR FLOATLIT FLOAT FALSE EOF ELSE DEF BOOL ]
-- On LPAREN shift to state 77

State 77:
func -> any_typ ID LPAREN . formals_opt RPAREN LBRACE stmts RBRACE [ WHILE VOID TRUE STRUCT STRINGLIT STRING RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT INT IF ID GLOBAL FOR FLOATLIT FLOAT FALSE EOF ELSE DEF BOOL ]
-- On STRING shift to state 64
-- On INT shift to state 65
-- On FLOAT shift to state 66
-- On BOOL shift to state 67
-- On formals_opt shift to state 78
-- On formal_list shift to state 112
-- On any_typ_not_void shift to state 116
-- On RPAREN reduce production formals_opt -> 

State 78:
func -> any_typ ID LPAREN formals_opt . RPAREN LBRACE stmts RBRACE [ WHILE VOID TRUE STRUCT STRINGLIT STRING RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT INT IF ID GLOBAL FOR FLOATLIT FLOAT FALSE EOF ELSE DEF BOOL ]
-- On RPAREN shift to state 79

State 79:
func -> any_typ ID LPAREN formals_opt RPAREN . LBRACE stmts RBRACE [ WHILE VOID TRUE STRUCT STRINGLIT STRING RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT INT IF ID GLOBAL FOR FLOATLIT FLOAT FALSE EOF ELSE DEF BOOL ]
-- On LBRACE shift to state 80

State 80:
func -> any_typ ID LPAREN formals_opt RPAREN LBRACE . stmts RBRACE [ WHILE VOID TRUE STRUCT STRINGLIT STRING RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT INT IF ID GLOBAL FOR FLOATLIT FLOAT FALSE EOF ELSE DEF BOOL ]
-- On stmts shift to state 81
-- On WHILE reduce production stmts -> 
-- On TRUE reduce production stmts -> 
-- On STRUCT reduce production stmts -> 
-- On STRINGLIT reduce production stmts -> 
-- On RETURN reduce production stmts -> 
-- On RBRACE reduce production stmts -> 
-- On NOT reduce production stmts -> 
-- On MINUS reduce production stmts -> 
-- On LPAREN reduce production stmts -> 
-- On LBRACE reduce production stmts -> 
-- On INTLIT reduce production stmts -> 
-- On IF reduce production stmts -> 
-- On ID reduce production stmts -> 
-- On GLOBAL reduce production stmts -> 
-- On FOR reduce production stmts -> 
-- On FLOATLIT reduce production stmts -> 
-- On FALSE reduce production stmts -> 
-- On DEF reduce production stmts -> 

State 81:
func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts . RBRACE [ WHILE VOID TRUE STRUCT STRINGLIT STRING RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT INT IF ID GLOBAL FOR FLOATLIT FLOAT FALSE EOF ELSE DEF BOOL ]
stmts -> stmts . stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE DEF ]
-- On WHILE shift to state 2
-- On TRUE shift to state 4
-- On STRUCT shift to state 60
-- On STRINGLIT shift to state 7
-- On RETURN shift to state 82
-- On RBRACE shift to state 86
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACE shift to state 87
-- On INTLIT shift to state 11
-- On IF shift to state 90
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FOR shift to state 94
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On DEF shift to state 102
-- On stmt shift to state 111
-- On expr shift to state 105

State 82:
stmt -> RETURN . SEMI [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
stmt -> RETURN . expr SEMI [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On SEMI shift to state 83
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 84

State 83:
stmt -> RETURN SEMI . [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE reduce production stmt -> RETURN SEMI 
-- On TRUE reduce production stmt -> RETURN SEMI 
-- On STRUCT reduce production stmt -> RETURN SEMI 
-- On STRINGLIT reduce production stmt -> RETURN SEMI 
-- On RETURN reduce production stmt -> RETURN SEMI 
-- On RBRACE reduce production stmt -> RETURN SEMI 
-- On NOT reduce production stmt -> RETURN SEMI 
-- On MINUS reduce production stmt -> RETURN SEMI 
-- On LPAREN reduce production stmt -> RETURN SEMI 
-- On LBRACE reduce production stmt -> RETURN SEMI 
-- On INTLIT reduce production stmt -> RETURN SEMI 
-- On IF reduce production stmt -> RETURN SEMI 
-- On ID reduce production stmt -> RETURN SEMI 
-- On GLOBAL reduce production stmt -> RETURN SEMI 
-- On FOR reduce production stmt -> RETURN SEMI 
-- On FLOATLIT reduce production stmt -> RETURN SEMI 
-- On FALSE reduce production stmt -> RETURN SEMI 
-- On EOF reduce production stmt -> RETURN SEMI 
-- On ELSE reduce production stmt -> RETURN SEMI 
-- On DEF reduce production stmt -> RETURN SEMI 

State 84:
expr -> expr . PLUS expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . EQ expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . NEQ expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LT expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LEQ expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GT expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GEQ expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . AND expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . OR expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DOT expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
stmt -> RETURN expr . SEMI [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On TIMES shift to state 20
-- On SEMI shift to state 85
-- On PLUS shift to state 24
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On AND shift to state 44

State 85:
stmt -> RETURN expr SEMI . [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE reduce production stmt -> RETURN expr SEMI 
-- On TRUE reduce production stmt -> RETURN expr SEMI 
-- On STRUCT reduce production stmt -> RETURN expr SEMI 
-- On STRINGLIT reduce production stmt -> RETURN expr SEMI 
-- On RETURN reduce production stmt -> RETURN expr SEMI 
-- On RBRACE reduce production stmt -> RETURN expr SEMI 
-- On NOT reduce production stmt -> RETURN expr SEMI 
-- On MINUS reduce production stmt -> RETURN expr SEMI 
-- On LPAREN reduce production stmt -> RETURN expr SEMI 
-- On LBRACE reduce production stmt -> RETURN expr SEMI 
-- On INTLIT reduce production stmt -> RETURN expr SEMI 
-- On IF reduce production stmt -> RETURN expr SEMI 
-- On ID reduce production stmt -> RETURN expr SEMI 
-- On GLOBAL reduce production stmt -> RETURN expr SEMI 
-- On FOR reduce production stmt -> RETURN expr SEMI 
-- On FLOATLIT reduce production stmt -> RETURN expr SEMI 
-- On FALSE reduce production stmt -> RETURN expr SEMI 
-- On EOF reduce production stmt -> RETURN expr SEMI 
-- On ELSE reduce production stmt -> RETURN expr SEMI 
-- On DEF reduce production stmt -> RETURN expr SEMI 

State 86:
func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE . [ WHILE VOID TRUE STRUCT STRINGLIT STRING RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT INT IF ID GLOBAL FOR FLOATLIT FLOAT FALSE EOF ELSE DEF BOOL ]
-- On WHILE reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On VOID reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On TRUE reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On STRUCT reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On STRINGLIT reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On STRING reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On RETURN reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On RBRACE reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On NOT reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On MINUS reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On LPAREN reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On LBRACE reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On INTLIT reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On INT reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On IF reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On ID reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On GLOBAL reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On FOR reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On FLOATLIT reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On FLOAT reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On FALSE reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On EOF reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On ELSE reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On DEF reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 
-- On BOOL reduce production func -> any_typ ID LPAREN formals_opt RPAREN LBRACE stmts RBRACE 

State 87:
stmt -> LBRACE . stmts RBRACE [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On stmts shift to state 88
-- On WHILE reduce production stmts -> 
-- On TRUE reduce production stmts -> 
-- On STRUCT reduce production stmts -> 
-- On STRINGLIT reduce production stmts -> 
-- On RETURN reduce production stmts -> 
-- On RBRACE reduce production stmts -> 
-- On NOT reduce production stmts -> 
-- On MINUS reduce production stmts -> 
-- On LPAREN reduce production stmts -> 
-- On LBRACE reduce production stmts -> 
-- On INTLIT reduce production stmts -> 
-- On IF reduce production stmts -> 
-- On ID reduce production stmts -> 
-- On GLOBAL reduce production stmts -> 
-- On FOR reduce production stmts -> 
-- On FLOATLIT reduce production stmts -> 
-- On FALSE reduce production stmts -> 
-- On DEF reduce production stmts -> 

State 88:
stmt -> LBRACE stmts . RBRACE [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
stmts -> stmts . stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE DEF ]
-- On WHILE shift to state 2
-- On TRUE shift to state 4
-- On STRUCT shift to state 60
-- On STRINGLIT shift to state 7
-- On RETURN shift to state 82
-- On RBRACE shift to state 89
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACE shift to state 87
-- On INTLIT shift to state 11
-- On IF shift to state 90
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FOR shift to state 94
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On DEF shift to state 102
-- On stmt shift to state 111
-- On expr shift to state 105

State 89:
stmt -> LBRACE stmts RBRACE . [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE reduce production stmt -> LBRACE stmts RBRACE 
-- On TRUE reduce production stmt -> LBRACE stmts RBRACE 
-- On STRUCT reduce production stmt -> LBRACE stmts RBRACE 
-- On STRINGLIT reduce production stmt -> LBRACE stmts RBRACE 
-- On RETURN reduce production stmt -> LBRACE stmts RBRACE 
-- On RBRACE reduce production stmt -> LBRACE stmts RBRACE 
-- On NOT reduce production stmt -> LBRACE stmts RBRACE 
-- On MINUS reduce production stmt -> LBRACE stmts RBRACE 
-- On LPAREN reduce production stmt -> LBRACE stmts RBRACE 
-- On LBRACE reduce production stmt -> LBRACE stmts RBRACE 
-- On INTLIT reduce production stmt -> LBRACE stmts RBRACE 
-- On IF reduce production stmt -> LBRACE stmts RBRACE 
-- On ID reduce production stmt -> LBRACE stmts RBRACE 
-- On GLOBAL reduce production stmt -> LBRACE stmts RBRACE 
-- On FOR reduce production stmt -> LBRACE stmts RBRACE 
-- On FLOATLIT reduce production stmt -> LBRACE stmts RBRACE 
-- On FALSE reduce production stmt -> LBRACE stmts RBRACE 
-- On EOF reduce production stmt -> LBRACE stmts RBRACE 
-- On ELSE reduce production stmt -> LBRACE stmts RBRACE 
-- On DEF reduce production stmt -> LBRACE stmts RBRACE 

State 90:
stmt -> IF . LPAREN expr RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
stmt -> IF . LPAREN expr RPAREN stmt ELSE stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On LPAREN shift to state 91

State 91:
stmt -> IF LPAREN . expr RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
stmt -> IF LPAREN . expr RPAREN stmt ELSE stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 92

State 92:
expr -> expr . PLUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DOT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
stmt -> IF LPAREN expr . RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
stmt -> IF LPAREN expr . RPAREN stmt ELSE stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On TIMES shift to state 20
-- On RPAREN shift to state 93
-- On PLUS shift to state 24
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On AND shift to state 44

State 93:
stmt -> IF LPAREN expr RPAREN . stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
stmt -> IF LPAREN expr RPAREN . stmt ELSE stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE shift to state 2
-- On TRUE shift to state 4
-- On STRUCT shift to state 60
-- On STRINGLIT shift to state 7
-- On RETURN shift to state 82
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACE shift to state 87
-- On INTLIT shift to state 11
-- On IF shift to state 90
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FOR shift to state 94
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On DEF shift to state 102
-- On stmt shift to state 108
-- On expr shift to state 105

State 94:
stmt -> FOR . LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On LPAREN shift to state 95

State 95:
stmt -> FOR LPAREN . expr_opt SEMI expr SEMI expr_opt RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr_opt shift to state 96
-- On expr shift to state 107
-- On SEMI reduce production expr_opt -> 

State 96:
stmt -> FOR LPAREN expr_opt . SEMI expr SEMI expr_opt RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On SEMI shift to state 97

State 97:
stmt -> FOR LPAREN expr_opt SEMI . expr SEMI expr_opt RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr shift to state 98

State 98:
expr -> expr . PLUS expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . EQ expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . NEQ expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LT expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LEQ expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GT expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GEQ expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . AND expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . OR expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DOT expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
stmt -> FOR LPAREN expr_opt SEMI expr . SEMI expr_opt RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On TIMES shift to state 20
-- On SEMI shift to state 99
-- On PLUS shift to state 24
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On AND shift to state 44

State 99:
stmt -> FOR LPAREN expr_opt SEMI expr SEMI . expr_opt RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On TRUE shift to state 4
-- On STRUCT shift to state 5
-- On STRINGLIT shift to state 7
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On INTLIT shift to state 11
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On expr_opt shift to state 100
-- On expr shift to state 107
-- On RPAREN reduce production expr_opt -> 

State 100:
stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt . RPAREN stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On RPAREN shift to state 101

State 101:
stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN . stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE shift to state 2
-- On TRUE shift to state 4
-- On STRUCT shift to state 60
-- On STRINGLIT shift to state 7
-- On RETURN shift to state 82
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACE shift to state 87
-- On INTLIT shift to state 11
-- On IF shift to state 90
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FOR shift to state 94
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On DEF shift to state 102
-- On stmt shift to state 104
-- On expr shift to state 105

State 102:
stmt -> DEF . func [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On VOID shift to state 70
-- On STRING shift to state 64
-- On INT shift to state 65
-- On FLOAT shift to state 66
-- On BOOL shift to state 67
-- On func shift to state 103
-- On any_typ_not_void shift to state 74
-- On any_typ shift to state 75

State 103:
stmt -> DEF func . [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE reduce production stmt -> DEF func 
-- On TRUE reduce production stmt -> DEF func 
-- On STRUCT reduce production stmt -> DEF func 
-- On STRINGLIT reduce production stmt -> DEF func 
-- On RETURN reduce production stmt -> DEF func 
-- On RBRACE reduce production stmt -> DEF func 
-- On NOT reduce production stmt -> DEF func 
-- On MINUS reduce production stmt -> DEF func 
-- On LPAREN reduce production stmt -> DEF func 
-- On LBRACE reduce production stmt -> DEF func 
-- On INTLIT reduce production stmt -> DEF func 
-- On IF reduce production stmt -> DEF func 
-- On ID reduce production stmt -> DEF func 
-- On GLOBAL reduce production stmt -> DEF func 
-- On FOR reduce production stmt -> DEF func 
-- On FLOATLIT reduce production stmt -> DEF func 
-- On FALSE reduce production stmt -> DEF func 
-- On EOF reduce production stmt -> DEF func 
-- On ELSE reduce production stmt -> DEF func 
-- On DEF reduce production stmt -> DEF func 

State 104:
stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt . [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On TRUE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On STRUCT reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On STRINGLIT reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On RETURN reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On RBRACE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On NOT reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On MINUS reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On LPAREN reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On LBRACE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On INTLIT reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On IF reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On ID reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On GLOBAL reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On FOR reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On FLOATLIT reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On FALSE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On EOF reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On ELSE reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 
-- On DEF reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt 

State 105:
expr -> expr . PLUS expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . EQ expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . NEQ expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LT expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LEQ expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GT expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GEQ expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . AND expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . OR expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DOT expr [ TIMES SEMI PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
stmt -> expr . SEMI [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On TIMES shift to state 20
-- On SEMI shift to state 106
-- On PLUS shift to state 24
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On AND shift to state 44

State 106:
stmt -> expr SEMI . [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE reduce production stmt -> expr SEMI 
-- On TRUE reduce production stmt -> expr SEMI 
-- On STRUCT reduce production stmt -> expr SEMI 
-- On STRINGLIT reduce production stmt -> expr SEMI 
-- On RETURN reduce production stmt -> expr SEMI 
-- On RBRACE reduce production stmt -> expr SEMI 
-- On NOT reduce production stmt -> expr SEMI 
-- On MINUS reduce production stmt -> expr SEMI 
-- On LPAREN reduce production stmt -> expr SEMI 
-- On LBRACE reduce production stmt -> expr SEMI 
-- On INTLIT reduce production stmt -> expr SEMI 
-- On IF reduce production stmt -> expr SEMI 
-- On ID reduce production stmt -> expr SEMI 
-- On GLOBAL reduce production stmt -> expr SEMI 
-- On FOR reduce production stmt -> expr SEMI 
-- On FLOATLIT reduce production stmt -> expr SEMI 
-- On FALSE reduce production stmt -> expr SEMI 
-- On EOF reduce production stmt -> expr SEMI 
-- On ELSE reduce production stmt -> expr SEMI 
-- On DEF reduce production stmt -> expr SEMI 

State 107:
expr -> expr . PLUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . EQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . NEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . LEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . GEQ expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . AND expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . OR expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr -> expr . DOT expr [ TIMES SEMI RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ DOT DIVIDE AND ]
expr_opt -> expr . [ SEMI RPAREN ]
-- On TIMES shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 28
-- On NEQ shift to state 30
-- On MINUS shift to state 32
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DOT shift to state 22
-- On DIVIDE shift to state 26
-- On AND shift to state 44
-- On SEMI reduce production expr_opt -> expr 
-- On RPAREN reduce production expr_opt -> expr 

State 108:
stmt -> IF LPAREN expr RPAREN stmt . [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
stmt -> IF LPAREN expr RPAREN stmt . ELSE stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On ELSE shift to state 109
-- On WHILE reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On TRUE reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On STRUCT reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On STRINGLIT reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On RETURN reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On RBRACE reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On NOT reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On MINUS reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On LPAREN reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On LBRACE reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On INTLIT reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On IF reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On ID reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On GLOBAL reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On FOR reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On FLOATLIT reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On FALSE reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On EOF reduce production stmt -> IF LPAREN expr RPAREN stmt 
-- On DEF reduce production stmt -> IF LPAREN expr RPAREN stmt 

State 109:
stmt -> IF LPAREN expr RPAREN stmt ELSE . stmt [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE shift to state 2
-- On TRUE shift to state 4
-- On STRUCT shift to state 60
-- On STRINGLIT shift to state 7
-- On RETURN shift to state 82
-- On NOT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACE shift to state 87
-- On INTLIT shift to state 11
-- On IF shift to state 90
-- On ID shift to state 12
-- On GLOBAL shift to state 14
-- On FOR shift to state 94
-- On FLOATLIT shift to state 17
-- On FALSE shift to state 18
-- On DEF shift to state 102
-- On stmt shift to state 110
-- On expr shift to state 105

State 110:
stmt -> IF LPAREN expr RPAREN stmt ELSE stmt . [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On TRUE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On STRUCT reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On STRINGLIT reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On RETURN reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On RBRACE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On NOT reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On MINUS reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On LPAREN reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On LBRACE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On INTLIT reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On IF reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On ID reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On GLOBAL reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On FOR reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On FLOATLIT reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On FALSE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On EOF reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On ELSE reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 
-- On DEF reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt 

State 111:
stmts -> stmts stmt . [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF DEF ]
-- On WHILE reduce production stmts -> stmts stmt 
-- On TRUE reduce production stmts -> stmts stmt 
-- On STRUCT reduce production stmts -> stmts stmt 
-- On STRINGLIT reduce production stmts -> stmts stmt 
-- On RETURN reduce production stmts -> stmts stmt 
-- On RBRACE reduce production stmts -> stmts stmt 
-- On NOT reduce production stmts -> stmts stmt 
-- On MINUS reduce production stmts -> stmts stmt 
-- On LPAREN reduce production stmts -> stmts stmt 
-- On LBRACE reduce production stmts -> stmts stmt 
-- On INTLIT reduce production stmts -> stmts stmt 
-- On IF reduce production stmts -> stmts stmt 
-- On ID reduce production stmts -> stmts stmt 
-- On GLOBAL reduce production stmts -> stmts stmt 
-- On FOR reduce production stmts -> stmts stmt 
-- On FLOATLIT reduce production stmts -> stmts stmt 
-- On FALSE reduce production stmts -> stmts stmt 
-- On EOF reduce production stmts -> stmts stmt 
-- On DEF reduce production stmts -> stmts stmt 

State 112:
formal_list -> formal_list . COMMA any_typ ID [ RPAREN COMMA ]
formals_opt -> formal_list . [ RPAREN ]
-- On COMMA shift to state 113
-- On RPAREN reduce production formals_opt -> formal_list 

State 113:
formal_list -> formal_list COMMA . any_typ ID [ RPAREN COMMA ]
-- On VOID shift to state 70
-- On STRING shift to state 64
-- On INT shift to state 65
-- On FLOAT shift to state 66
-- On BOOL shift to state 67
-- On any_typ_not_void shift to state 74
-- On any_typ shift to state 114

State 114:
formal_list -> formal_list COMMA any_typ . ID [ RPAREN COMMA ]
-- On ID shift to state 115

State 115:
formal_list -> formal_list COMMA any_typ ID . [ RPAREN COMMA ]
-- On RPAREN reduce production formal_list -> formal_list COMMA any_typ ID 
-- On COMMA reduce production formal_list -> formal_list COMMA any_typ ID 

State 116:
formal_list -> any_typ_not_void . ID [ RPAREN COMMA ]
-- On ID shift to state 117

State 117:
formal_list -> any_typ_not_void ID . [ RPAREN COMMA ]
-- On RPAREN reduce production formal_list -> any_typ_not_void ID 
-- On COMMA reduce production formal_list -> any_typ_not_void ID 

State 118:
vdecl -> any_typ_not_void . ID SEMI [ VOID STRING RBRACE INT FLOAT BOOL ]
-- On ID shift to state 119

State 119:
vdecl -> any_typ_not_void ID . SEMI [ VOID STRING RBRACE INT FLOAT BOOL ]
-- On SEMI shift to state 120

State 120:
vdecl -> any_typ_not_void ID SEMI . [ VOID STRING RBRACE INT FLOAT BOOL ]
-- On VOID reduce production vdecl -> any_typ_not_void ID SEMI 
-- On STRING reduce production vdecl -> any_typ_not_void ID SEMI 
-- On RBRACE reduce production vdecl -> any_typ_not_void ID SEMI 
-- On INT reduce production vdecl -> any_typ_not_void ID SEMI 
-- On FLOAT reduce production vdecl -> any_typ_not_void ID SEMI 
-- On BOOL reduce production vdecl -> any_typ_not_void ID SEMI 

State 121:
stmt -> STRUCT struct_decl . [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE reduce production stmt -> STRUCT struct_decl 
-- On TRUE reduce production stmt -> STRUCT struct_decl 
-- On STRUCT reduce production stmt -> STRUCT struct_decl 
-- On STRINGLIT reduce production stmt -> STRUCT struct_decl 
-- On RETURN reduce production stmt -> STRUCT struct_decl 
-- On RBRACE reduce production stmt -> STRUCT struct_decl 
-- On NOT reduce production stmt -> STRUCT struct_decl 
-- On MINUS reduce production stmt -> STRUCT struct_decl 
-- On LPAREN reduce production stmt -> STRUCT struct_decl 
-- On LBRACE reduce production stmt -> STRUCT struct_decl 
-- On INTLIT reduce production stmt -> STRUCT struct_decl 
-- On IF reduce production stmt -> STRUCT struct_decl 
-- On ID reduce production stmt -> STRUCT struct_decl 
-- On GLOBAL reduce production stmt -> STRUCT struct_decl 
-- On FOR reduce production stmt -> STRUCT struct_decl 
-- On FLOATLIT reduce production stmt -> STRUCT struct_decl 
-- On FALSE reduce production stmt -> STRUCT struct_decl 
-- On EOF reduce production stmt -> STRUCT struct_decl 
-- On ELSE reduce production stmt -> STRUCT struct_decl 
-- On DEF reduce production stmt -> STRUCT struct_decl 

State 122:
stmt -> WHILE LPAREN expr RPAREN stmt . [ WHILE TRUE STRUCT STRINGLIT RETURN RBRACE NOT MINUS LPAREN LBRACE INTLIT IF ID GLOBAL FOR FLOATLIT FALSE EOF ELSE DEF ]
-- On WHILE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On TRUE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On STRUCT reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On STRINGLIT reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On RETURN reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On RBRACE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On NOT reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On MINUS reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On LPAREN reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On LBRACE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On INTLIT reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On IF reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On ID reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On GLOBAL reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On FOR reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On FLOATLIT reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On FALSE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On EOF reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On ELSE reduce production stmt -> WHILE LPAREN expr RPAREN stmt 
-- On DEF reduce production stmt -> WHILE LPAREN expr RPAREN stmt 

State 123:
program -> stmts EOF . [ # ]
-- On # reduce production program -> stmts EOF 

State 124:
program' -> program . [ # ]
-- On # accept program

